%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2372 756
%%HiResBoundingBox: 0 0 2371.9199 756
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2371.9199 756 re
W
q
[0.24 0 0 -0.24 0 756] cm
q
0 0 9883.333 3147.5383 re
W*
q
[3.125456 0 0 3.126368 0.00796701 0] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 3162.2002 1008.7713 re
f
Q
q
[24.107586 0 0 24.114618 12.407007 367.23633] cm
/DeviceRGB {} CS
[0.6275 0.9333 0.8] SC
/DeviceRGB {} cs
[0.6275 0.9333 0.8] sc
11 90 m
89 90 l
89.552734 90 90 89.552734 90 89 c
90 83.511719 86.40625 78.598633 81.210938 76.911133 c
78.503906 72.395508 73.609375 69.606445 68.34082 69.606445 c
63.893555 69.606445 59.65332 71.618164 56.811523 75.03125 c
55.059143 73.910706 53.053162 73.271606 51.003296 73.107178 c
51.005493 67.868225 l
61.784424 60.838501 l
64.19873 63.949585 67.888306 65.637695 71.707031 65.637695 c
74.182617 65.637695 76.705078 64.935547 78.952148 63.469727 c
86.986328 58.225586 89.865234 42.729492 89.984375 42.072266 c
90.079102 41.543945 89.741211 41.035156 89.216797 40.917969 c
88.553711 40.771484 72.916016 37.373047 65.194336 42.412109 c
62.292969 44.305664 60.275391 47.178711 59.515625 50.501953 c
58.829834 53.501526 59.249939 56.539978 60.678711 59.171814 c
51.00647 65.479797 l
51.015381 43.778625 l
57.408752 43.249512 62.459106 37.714172 62.460938 30.973633 c
62.463867 21.490234 51.196289 10.732422 50.71582 10.279297 c
50.328125 9.910156 49.71582 9.915039 49.330078 10.290039 c
48.851563 10.758789 37.587891 21.865234 37.585938 30.980469 c
37.584961 34.407227 38.873047 37.629883 41.213867 40.055664 c
43.325134 42.244202 46.066345 43.539307 49.015381 43.78064 c
49.00647 65.477356 l
39.337952 59.171631 l
40.766724 56.539795 41.186768 53.501465 40.500977 50.501953 c
39.741211 47.178711 37.724609 44.306641 34.823242 42.412109 c
27.100586 37.374023 11.461914 40.771484 10.799805 40.917969 c
10.275391 41.035156 9.9375 41.543945 10.032227 42.072266 c
10.151367 42.729492 13.03125 58.225586 21.064453 63.46875 c
21.064453 63.469727 21.064453 63.469727 21.064453 63.469727 c
23.311523 64.935547 25.833984 65.637695 28.30957 65.637695 c
32.12738 65.637695 35.817688 63.94873 38.232178 60.838318 c
49.005493 67.864563 l
49.003296 73.09845 l
47.966125 73.178284 46.934204 73.372986 45.93457 73.711914 c
43.526367 71.09375 40.155273 69.606445 36.578125 69.606445 c
31.770508 69.606445 27.411133 72.303711 25.249023 76.545898 c
24.401367 76.371094 23.552734 76.282227 22.717773 76.282227 c
15.705078 76.282227 10 81.987305 10 89 c
10 89.552734 10.447266 90 11 90 c
h
77.858398 61.793945 m
73.072754 64.919006 66.822937 63.961304 63.448792 59.753052 c
66.231201 57.938416 l
78.974976 60.957275 l
78.614868 61.262085 78.243103 61.542908 77.858398 61.793945 c
h
84.807495 52.187622 m
77.649414 50.49176 l
87.486633 44.076172 l
86.987793 46.083313 86.118347 49.11261 84.807495 52.187622 c
h
80.613159 59.290833 m
68.542358 56.431152 l
75.33844 51.998901 l
83.955811 54.040405 l
83.024292 55.943604 81.9151 57.768188 80.613159 59.290833 c
h
76.56073 48.813965 m
77.867249 41.679443 l
81.182617 41.714966 84.299011 42.102783 86.350098 42.429626 c
76.56073 48.813965 l
h
74.252502 50.319336 m
67.459045 54.749817 l
69.68396 42.602051 l
71.582947 42.051575 73.703186 41.782532 75.830688 41.700989 c
74.252502 50.319336 l
h
61.46582 50.947266 m
62.109375 48.132813 63.821289 45.696289 66.288086 44.087891 c
66.668579 43.839478 67.07666 43.617798 67.502197 43.414124 c
65.149536 56.256042 l
62.35376 58.079407 l
61.220276 55.908142 60.902222 53.41217 61.46582 50.947266 c
h
38.550781 50.947266 m
39.11438 53.412109 38.796387 55.907959 37.662964 58.079224 c
34.867004 56.255737 l
32.513672 43.410278 l
32.940613 43.614319 33.3479 43.838867 33.729492 44.087891 c
36.195313 45.696289 37.907227 48.132813 38.550781 50.947266 c
h
19.40332 59.290833 m
18.101624 57.768066 16.992554 55.943481 16.061096 54.040344 c
24.678833 51.998962 l
31.474548 56.43103 l
19.40332 59.290833 l
h
12.529846 44.0755 m
22.367737 50.491638 l
15.209412 52.187561 l
13.898377 49.112122 13.028687 46.082581 12.529846 44.0755 c
h
22.148438 41.675232 m
23.45575 48.813416 l
13.666626 42.429016 l
15.71814 42.102112 18.834473 41.710571 22.148438 41.675232 c
h
25.765259 50.319641 m
24.187439 41.707886 l
26.315369 41.789673 28.433838 42.056152 30.333557 42.607178 c
32.557495 54.749451 l
25.765259 50.319641 l
h
22.158203 61.793945 m
22.158203 61.794922 l
21.773254 61.54364 21.401245 61.262634 21.040955 60.957458 c
33.785706 57.938354 l
36.56781 59.752808 l
33.193909 63.959534 26.945679 64.919006 22.158203 61.793945 c
h
42.762695 21.819397 m
49.021973 27.765198 l
49.018677 35.746765 l
40.196777 27.368103 l
40.765747 25.506348 41.685608 23.617493 42.762695 21.819397 c
h
59.87738 27.337341 m
51.018677 35.752014 l
51.021973 27.769897 l
57.351257 21.757385 l
58.417236 23.549194 59.322754 25.444702 59.87738 27.337341 c
h
49.023071 25.00885 m
43.849548 20.094604 l
45.657593 17.390503 47.651306 15.037781 49.027832 13.517944 c
49.023071 25.00885 l
h
51.016174 41.778198 m
51.017517 38.510559 l
60.373718 29.622986 l
60.42926 30.076965 60.46106 30.527954 60.460938 30.973633 c
60.459106 36.609192 56.305969 41.252625 51.016174 41.778198 c
h
56.265991 20.031067 m
51.023071 25.011292 l
51.027832 13.464478 l
52.416809 14.960205 54.440491 17.30249 56.265991 20.031067 c
h
42.65332 38.666992 m
40.673828 36.616211 39.584961 33.886719 39.585938 30.980469 c
39.58606 30.538391 39.617859 30.088745 39.677612 29.63385 c
49.017517 38.504089 l
49.016174 41.780457 l
46.613831 41.54425 44.38324 40.460449 42.65332 38.666992 c
h
22.717773 78.282227 m
23.645508 78.282227 24.595703 78.414063 25.543945 78.672852 c
26.027344 78.801758 26.529297 78.560547 26.726563 78.102539 c
28.419922 74.15625 32.287109 71.606445 36.578125 71.606445 c
39.794922 71.606445 42.814453 73.03418 44.861328 75.524414 c
45.138672 75.861328 45.602539 75.981445 46.006836 75.817383 c
47.290039 75.301758 48.633789 75.040039 50 75.040039 c
52.324219 75.040039 54.543945 75.78418 56.418945 77.191406 c
56.633789 77.352539 56.902344 77.417969 57.167969 77.380859 c
57.432617 77.34082 57.670898 77.196289 57.828125 76.979492 c
60.275391 73.615234 64.206055 71.606445 68.34082 71.606445 c
73.023438 71.606445 77.365234 74.149414 79.671875 78.243164 c
79.800781 78.470703 80.013672 78.639648 80.264648 78.712891 c
84.496094 79.9375 87.541992 83.674805 87.952148 88 c
12.045898 88 l
12.552734 82.557617 17.145508 78.282227 22.717773 78.282227 c
h
f
Q
q
[56.401375 0 0 56.417824 2574.0391 -175.22656] cm
/DeviceRGB {} CS
[0.6275 0.9333 0.8] SC
/DeviceRGB {} cs
[0.6275 0.9333 0.8] sc
2 40 m
2 8 l
8 8 l
14 8 14 12.4 14 23.16 c
14 35.559998 14 40 8 40 c
2 40 l
h
6 36 m
8 36 l
10.24 36 10.24 34.32 10.24 23.16 c
10.24 13.16 10.24 11.2 8 11.2 c
6 11.2 l
6 36 l
h
20.1 40 m
20.1 8 l
24.1 8 l
24.1 40 l
20.1 40 l
h
30.200001 23.16 m
30.200001 12 30.200001 7.599999 36.200001 7.599999 c
40.760002 7.599999 41.84 10.119999 42.120003 16.16 c
38.400002 16.16 l
38.240002 11.799999 37.800003 10.799999 36.200001 10.799999 c
33.959999 10.799999 33.959999 12.759999 33.959999 23.16 c
33.959999 34.720001 33.959999 36.400002 36.200001 36.400002 c
38.32 36.400002 38.440002 34.880001 38.440002 26.400002 c
35.800003 26.400002 l
35.800003 23.200001 l
42.200005 23.200001 l
42.200005 24.76 l
42.200005 35.959999 42.200005 40.400002 36.200005 40.400002 c
30.200005 40.400002 30.200005 35.960003 30.200005 23.160002 c
30.200001 23.16 l
h
47.900002 40 m
47.900002 8 l
51.900002 8 l
51.900002 40 l
47.900002 40 l
h
58.400002 40 m
58.400002 8 l
66.800003 8 l
66.800003 11.2 l
62.400002 11.2 l
62.400002 23.200001 l
66 23.200001 l
66 26.400002 l
62.400002 26.400002 l
62.400002 40 l
58.400002 40 l
h
72.099998 40 m
72.099998 23.200001 l
72.099998 12.040001 72.099998 7.64 78.099998 7.64 c
84.099998 7.64 84.099998 12.040001 84.099998 23.200001 c
84.099998 40 l
80.099998 40 l
80.099998 30.799999 l
76.099998 30.799999 l
76.099998 40 l
72.099998 40 l
h
76.099998 27.6 m
80.099998 27.6 l
80.099998 23.200001 l
80.099998 12.800001 80.099998 10.840001 78.099998 10.840001 c
76.099998 10.840001 76.099998 12.800001 76.099998 23.200001 c
76.099998 27.6 l
h
90.599998 40 m
90.599998 8 l
97.080002 8 l
101.200005 8 102.599998 10.520001 102.599998 15.360001 c
102.599998 19.720001 102.080002 22.200001 100.839996 23.400002 c
100.839996 23.640001 l
101.879997 24.000002 102.199997 25.880001 102.599998 30.560001 c
103.400002 40 l
99.400002 40 l
98.880005 30.560001 l
98.600006 25.800001 97.880005 24.800001 96.680008 24.800001 c
94.600006 24.800001 l
94.600006 40 l
90.600006 40 l
90.599998 40 l
h
94.599998 21.6 m
97.080002 21.6 l
98.480003 21.6 98.880005 20.200001 98.880005 15.360001 c
98.880005 12.200001 98.280006 11.200001 97.080002 11.200001 c
94.599998 11.200001 l
94.599998 21.6 l
h
109.099998 40 m
109.099998 8 l
112.699997 8 l
116.899994 28 l
117.299995 28 l
121.499992 8 l
125.099991 8 l
125.099991 40 l
121.099991 40 l
121.099991 24 l
118.259995 40 l
115.859993 40 l
113.099991 24 l
113.099991 40 l
109.099991 40 l
109.099998 40 l
h
f
Q
q
[23.425631 0 0 23.432465 2632.9631 2442.3706] cm
/DeviceRGB {} CS
[0.6275 0.9333 0.8] SC
/DeviceRGB {} cs
[0.6275 0.9333 0.8] sc
2.3 15.88 m
2.3 11.06 l
2.3 8.179999 3.88 7.32 6.2 7.32 c
8.12 7.32 9.98 8.299999 9.98 10.32 c
9.98 10.759999 9.66 10.98 9.32 10.98 c
8.98 10.98 8.639999 10.759999 8.639999 10.32 c
8.639999 9.299999 7.52 8.62 6.199999 8.62 c
4.379999 8.62 3.619999 9.36 3.619999 11.06 c
3.619999 15.879999 l
3.619999 17.619999 4.579999 18.16 6.199999 18.16 c
8.119999 18.16 8.799999 17.24 8.799999 15.46 c
8.799999 14.62 l
6.999999 14.62 l
6.579999 14.62 6.359999 14.3 6.359999 13.96 c
6.359999 13.62 6.579999 13.28 6.999999 13.28 c
9.499999 13.28 l
9.899999 13.28 10.119999 13.679999 10.119999 13.96 c
10.119999 15.46 l
10.119999 18.34 8.999999 19.459999 6.199999 19.459999 c
3.559999 19.459999 2.299999 18.5 2.299999 15.879999 c
2.3 15.88 l
h
16.18 15.9 m
16.18 18.76 l
16.18 19.200001 15.84 19.4 15.520001 19.4 c
15.18 19.4 14.860001 19.199999 14.860001 18.76 c
14.860001 8.020001 l
14.860001 7.62 15.080001 7.360001 15.520001 7.360001 c
18.220001 7.360001 l
18.980001 7.360001 21.380001 7.58 21.380001 10.280001 c
21.380001 12.780001 l
21.380001 14.300001 20.820002 15.26 19.540001 15.68 c
20.900002 18.42 l
21.180002 18.960001 20.760002 19.4 20.320002 19.4 c
20.080002 19.4 19.780001 19.24 19.620001 18.9 c
18.16 15.9 l
16.18 15.9 l
h
20.059999 12.78 m
20.059999 10.28 l
20.059999 9.799999 19.879999 8.7 18.219999 8.7 c
16.18 8.7 l
16.18 14.56 l
18.040001 14.56 l
19.02 14.56 20.060001 14.339999 20.060001 12.78 c
20.059999 12.78 l
h
26.040001 15.86 m
26.040001 10.9 l
26.040001 8.5 27.280001 7.219999 29.68 7.219999 c
30.200001 7.219999 l
32.580002 7.219999 33.84 8.499999 33.84 10.9 c
33.84 15.86 l
33.84 18.059999 32.380001 19.5 30.200001 19.5 c
29.68 19.5 l
27.460001 19.5 26.040001 18.040001 26.040001 15.86 c
h
29.68 18.16 m
30.200001 18.16 l
31.640001 18.16 32.5 17.26 32.5 15.86 c
32.5 10.9 l
32.5 9.34 31.74 8.539999 30.200001 8.539999 c
29.68 8.539999 l
28.16 8.539999 27.32 9.359999 27.32 10.9 c
27.32 15.86 l
27.32 17.32 28.24 18.16 29.68 18.16 c
h
42.16 16.959999 m
44.560001 10.599999 l
43.960003 8.259998 l
43.700005 7.299998 45.040005 7.059999 45.260002 7.899998 c
47.620003 16.579998 l
50.160004 7.899998 l
50.420002 6.999998 51.740005 7.379998 51.480003 8.239998 c
48.380005 18.779999 l
48.260006 19.159998 47.920006 19.4 47.600006 19.4 c
47.240005 19.4 46.920006 19.18 46.800007 18.779999 c
45.160007 12.759998 l
44.400009 14.759998 43.600006 16.799999 42.860008 18.799999 c
42.720009 19.16 42.400009 19.4 42.10001 19.4 c
41.800011 19.4 41.500011 19.199999 41.360008 18.76 c
38.180008 8.24 l
37.92001 7.38 39.140007 7.1 39.400009 7.86 c
42.16 16.959999 l
h
55.759998 7.36 m
61.799999 7.36 l
62.219997 7.36 62.419998 7.7 62.419998 8.04 c
62.419998 8.379999 62.219997 8.7 61.799999 8.7 c
59.52 8.7 l
59.52 18.76 l
59.52 19.18 59.18 19.4 58.84 19.4 c
58.5 19.4 58.18 19.18 58.18 18.76 c
58.18 8.7 l
55.760002 8.7 l
55.340004 8.7 55.140003 8.38 55.140003 8.04 c
55.140003 7.7 55.340004 7.36 55.760002 7.36 c
55.759998 7.36 l
h
66.620003 18.76 m
66.620003 8 l
66.620003 7.58 66.940002 7.38 67.280006 7.38 c
67.62001 7.38 67.960007 7.58 67.960007 8 c
67.960007 12.58 l
72.500008 12.58 l
72.500008 8 l
72.500008 7.58 72.820007 7.36 73.140007 7.36 c
73.460007 7.36 73.800011 7.58 73.800011 8 c
73.800011 18.76 l
73.800011 19.18 73.460014 19.4 73.140007 19.4 c
72.82 19.4 72.500008 19.18 72.500008 18.76 c
72.500008 13.940001 l
67.960007 13.940001 l
67.960007 18.76 l
67.960007 19.18 67.62001 19.4 67.280006 19.4 c
66.940002 19.4 66.620003 19.18 66.620003 18.76 c
h
86.339996 18.719999 m
86.339996 7.999999 l
86.339996 7.679999 86.5 7.359999 86.939995 7.359999 c
89.559998 7.359999 l
91.540001 7.359999 92.619995 8.079999 92.619995 10.079999 c
92.619995 10.879999 92.519997 11.659999 92.019997 12.199999 c
93.159996 12.999999 93.359993 14.379999 93.359993 15.779999 c
93.359993 18.239998 92.019997 19.399998 89.719994 19.399998 c
87.039993 19.399998 l
86.699997 19.399998 86.339996 19.279997 86.339996 18.719997 c
86.339996 18.719999 l
h
87.68 18.08 m
89.419998 18.08 l
91.080002 18.08 92 17.4 92 15.78 c
92 14.12 91.580002 13 89.959999 13 c
87.68 13 l
87.68 18.08 l
h
91.300003 10.08 m
91.300003 8.88 90.460007 8.7 89.560005 8.7 c
87.680008 8.7 l
87.680008 11.66 l
89.520004 11.66 l
90.780006 11.66 91.300003 11.3 91.300003 10.08 c
h
97.839996 18.700001 m
97.839996 8.06 l
97.839996 7.6 98.199997 7.360001 98.539993 7.360001 c
103.139992 7.360001 l
103.579994 7.360001 103.799995 7.680001 103.799995 8.020001 c
103.799995 8.360001 103.579994 8.700001 103.139992 8.700001 c
99.179993 8.700001 l
99.179993 12.580001 l
102.319992 12.580001 l
102.779991 12.580001 102.999992 12.900001 102.999992 13.240001 c
102.999992 13.580001 102.759995 13.940001 102.319992 13.940001 c
99.179993 13.940001 l
99.179993 18.08 l
103.139992 18.08 l
103.55999 18.08 103.779991 18.42 103.779991 18.74 c
103.779991 19.08 103.55999 19.4 103.139992 19.4 c
98.539993 19.4 l
98.199997 19.4 97.839996 19.279999 97.839996 18.699999 c
97.839996 18.700001 l
h
114.099998 8.3 m
111.619995 13.440001 l
111.619995 18.76 l
111.619995 19.200001 111.299995 19.4 110.979996 19.4 c
110.639999 19.4 110.319992 19.18 110.319992 18.76 c
110.319992 13.440001 l
107.779991 8.320001 l
107.359993 7.440001 108.579994 6.920001 108.999992 7.760001 c
110.979996 11.720001 l
112.879997 7.780001 l
113.32 6.860001 114.519997 7.440001 114.099998 8.300001 c
114.099998 8.3 l
h
118.419998 15.86 m
118.419998 10.9 l
118.419998 8.5 119.659996 7.219999 122.059998 7.219999 c
122.579994 7.219999 l
124.959991 7.219999 126.219994 8.499999 126.219994 10.9 c
126.219994 15.86 l
126.219994 18.059999 124.759995 19.5 122.579994 19.5 c
122.059998 19.5 l
119.839996 19.5 118.419998 18.040001 118.419998 15.86 c
h
122.059998 18.16 m
122.579994 18.16 l
124.019997 18.16 124.879997 17.26 124.879997 15.86 c
124.879997 10.9 l
124.879997 9.34 124.119995 8.539999 122.579994 8.539999 c
122.059998 8.539999 l
120.540001 8.539999 119.699997 9.359999 119.699997 10.9 c
119.699997 15.86 l
119.699997 17.32 120.619995 18.16 122.059998 18.16 c
h
137.800003 8 m
137.800003 18.76 l
137.800003 19.18 137.479996 19.4 137.160004 19.4 c
136.919998 19.4 136.600006 19.219999 136.460007 18.959999 c
134.960007 16.019999 133.840012 13.759999 132.340012 10.799999 c
132.340012 18.759998 l
132.340012 19.179998 132.020004 19.399998 131.680008 19.399998 c
131.360001 19.399998 131.020004 19.179998 131.020004 18.759998 c
131.020004 7.999998 l
131.020004 7.299998 132.020004 7.259998 132.240005 7.679998 c
136.460007 16.019999 l
136.460007 7.999998 l
136.460007 7.579998 136.780014 7.359998 137.12001 7.359998 c
137.460007 7.359998 137.800003 7.579998 137.800003 7.999998 c
137.800003 8 l
h
142.919998 18.780001 m
142.919998 8.020001 l
142.919998 7.480001 143.300003 7.360001 143.580002 7.360001 c
146.779999 7.360001 l
149.419998 7.360001 150.720001 8.620001 150.720001 11.1 c
150.720001 16.220001 l
150.720001 17.780001 149.5 19.420002 146.839996 19.420002 c
143.580002 19.420002 l
143.300003 19.420002 142.919998 19.260002 142.919998 18.780003 c
142.919998 18.780001 l
h
149.399994 16.219999 m
149.399994 11.099999 l
149.399994 9.459999 148.519989 8.699999 146.779999 8.699999 c
144.240005 8.699999 l
144.240005 18.119999 l
146.840012 18.119999 l
148.060013 18.119999 149.400009 17.459999 149.400009 16.219999 c
149.399994 16.219999 l
h
162.960007 18.719999 m
162.960007 7.999999 l
162.960007 7.679999 163.12001 7.359999 163.560013 7.359999 c
166.180008 7.359999 l
168.16 7.359999 169.24001 8.079999 169.24001 10.079999 c
169.24001 10.879999 169.14 11.659999 168.64 12.199999 c
169.78 12.999999 169.98 14.379999 169.98 15.779999 c
169.98 18.239998 168.64 19.399998 166.339996 19.399998 c
163.660004 19.399998 l
163.320007 19.399998 162.960007 19.279997 162.960007 18.719997 c
162.960007 18.719999 l
h
164.300003 18.08 m
166.040009 18.08 l
167.700012 18.08 168.62001 17.4 168.62001 15.78 c
168.62001 14.12 168.20001 13 166.580017 13 c
164.300018 13 l
164.300018 18.08 l
164.300003 18.08 l
h
167.92 10.08 m
167.92 8.88 167.080002 8.7 166.179993 8.7 c
164.299988 8.7 l
164.299988 11.66 l
166.139984 11.66 l
167.399979 11.66 167.91998 11.3 167.91998 10.08 c
167.92 10.08 l
h
174.3 15.86 m
174.3 10.9 l
174.3 8.5 175.54001 7.219999 177.94 7.219999 c
178.46001 7.219999 l
180.84001 7.219999 182.10001 8.499999 182.10001 10.9 c
182.10001 15.86 l
182.10001 18.059999 180.64 19.5 178.46001 19.5 c
177.94 19.5 l
175.72 19.5 174.3 18.040001 174.3 15.86 c
h
177.94 18.16 m
178.46001 18.16 l
179.90001 18.16 180.76001 17.26 180.76001 15.86 c
180.76001 10.9 l
180.76001 9.34 180.00002 8.539999 178.46001 8.539999 c
177.94 8.539999 l
176.42 8.539999 175.58 9.359999 175.58 10.9 c
175.58 15.86 l
175.58 17.32 176.5 18.16 177.94 18.16 c
h
188.24001 15.9 m
188.24001 18.76 l
188.24001 19.200001 187.90001 19.4 187.58 19.4 c
187.24001 19.4 186.92 19.199999 186.92 18.76 c
186.92 8.020001 l
186.92 7.62 187.14 7.360001 187.58 7.360001 c
190.28 7.360001 l
191.03999 7.360001 193.44 7.58 193.44 10.280001 c
193.44 12.780001 l
193.44 14.300001 192.88 15.26 191.60001 15.68 c
192.96001 18.42 l
193.24001 18.960001 192.82001 19.4 192.38 19.4 c
192.14 19.4 191.84001 19.24 191.68001 18.9 c
190.22 15.9 l
188.24001 15.9 l
h
192.12 12.78 m
192.12 10.28 l
192.12 9.799999 191.94 8.7 190.28 8.7 c
188.24001 8.7 l
188.24001 14.56 l
190.10001 14.56 l
191.08 14.56 192.12001 14.339999 192.12001 12.78 c
192.12 12.78 l
h
198.32001 18.780001 m
198.32001 8.020001 l
198.32001 7.480001 198.70001 7.360001 198.98001 7.360001 c
202.18001 7.360001 l
204.82001 7.360001 206.12001 8.620001 206.12001 11.1 c
206.12001 16.220001 l
206.12001 17.780001 204.90001 19.420002 202.24001 19.420002 c
198.98001 19.420002 l
198.70001 19.420002 198.32001 19.260002 198.32001 18.780003 c
198.32001 18.780001 l
h
204.8 16.219999 m
204.8 11.099999 l
204.8 9.459999 203.92 8.699999 202.18001 8.699999 c
199.64001 8.699999 l
199.64001 18.119999 l
202.24002 18.119999 l
203.46002 18.119999 204.80002 17.459999 204.80002 16.219999 c
204.8 16.219999 l
h
210.88 18.700001 m
210.88 8.06 l
210.88 7.6 211.24001 7.360001 211.58 7.360001 c
216.18001 7.360001 l
216.62001 7.360001 216.84001 7.680001 216.84001 8.020001 c
216.84001 8.360001 216.62001 8.700001 216.18001 8.700001 c
212.22 8.700001 l
212.22 12.580001 l
215.36 12.580001 l
215.82001 12.580001 216.03999 12.900001 216.03999 13.240001 c
216.03999 13.580001 215.79999 13.940001 215.36 13.940001 c
212.22 13.940001 l
212.22 18.08 l
216.18001 18.08 l
216.60001 18.08 216.82001 18.42 216.82001 18.74 c
216.82001 19.08 216.60001 19.4 216.18001 19.4 c
211.58 19.4 l
211.24001 19.4 210.88 19.279999 210.88 18.699999 c
210.88 18.700001 l
h
222.78 15.9 m
222.78 18.76 l
222.78 19.200001 222.44 19.4 222.12 19.4 c
221.78 19.4 221.45999 19.199999 221.45999 18.76 c
221.45999 8.020001 l
221.45999 7.62 221.67999 7.360001 222.12 7.360001 c
224.81999 7.360001 l
225.57999 7.360001 227.98 7.58 227.98 10.280001 c
227.98 12.780001 l
227.98 14.300001 227.42 15.26 226.14 15.68 c
227.5 18.42 l
227.78 18.960001 227.36 19.4 226.92 19.4 c
226.67999 19.4 226.38 19.24 226.22 18.9 c
224.75999 15.9 l
222.78 15.9 l
h
226.66 12.78 m
226.66 10.28 l
226.66 9.799999 226.48001 8.7 224.82001 8.7 c
222.78001 8.7 l
222.78001 14.56 l
224.64001 14.56 l
225.62001 14.56 226.66002 14.339999 226.66002 12.78 c
226.66 12.78 l
h
232.56 17.68 m
232.12 16.860001 233.23999 16.26 233.75999 17.08 c
234.01999 17.5 234.79999 18.219999 236.03999 18.219999 c
236.56 18.219999 237.86 17.84 238.03999 16.359999 c
238.15999 15.459999 237.29999 14.579999 235.81999 13.839998 c
233.73999 12.859999 232.15999 11.999998 232.15999 10.279999 c
232.15999 8.239999 233.87999 7.279999 235.71999 7.279999 c
237.37999 7.279999 238.29999 8.299999 238.61998 8.819999 c
239.07999 9.559999 238.07999 10.279999 237.51997 9.559999 c
237.23997 9.199999 236.69997 8.599999 235.71997 8.599999 c
234.61996 8.599999 233.47997 9.119999 233.47997 10.279999 c
233.47997 11.199999 234.49997 11.719999 236.01996 12.439999 c
237.79996 13.319999 239.65996 14.179998 239.37996 16.519999 c
239.15996 18.359999 237.75996 19.539999 236.03996 19.539999 c
234.73996 19.539999 233.13997 18.839998 232.55997 17.679998 c
232.56 17.68 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
